# -*- coding: utf-8 -*-
"""pysus_sim_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jOimXwID2XV3AoCQvExWpU2VkiDz7p4Y
"""

!pip install pysus
!pip install geopandas

"""Para melhor compreensão do dataset visite o
[dicionario de dados](https://pcdas.icict.fiocruz.br/conjunto-de-dados/sistema-de-informacoes-de-mortalidade-sim/dicionario-de-variaveis/)
"""

from pysus.online_data import SIM, parquets_to_dataframe
from pysus.online_data.SIM import download

from pysus.preprocessing.decoders import decodifica_idade_SIM, translate_variables_SIM
import pandas as pd
import numpy as np

estados = ['RS']

dataFrame = pd.DataFrame()

ano = 2010
while ano <= 2021:
    file_path = download('RS', ano)
    dataFrame_anual = pd.read_parquet(file_path)

    if dataFrame_anual.shape[0] > 50000:  # Limit data to 5000 rows
        dataFrame_anual = dataFrame_anual.sample(50000, random_state=np.random.randint(1, 10000))

    # Add extra useful columns
    dataFrame_anual['UF'] = 'RS'
    dataFrame_anual['YEAR'] = ano
    dataFrame_anual['DTNASC'] = dataFrame_anual['DTNASC'].str.strip().replace('', np.nan)
    dataFrame_anual['DTOBITO'] = dataFrame_anual['DTOBITO'].str.strip().replace('', np.nan)

    print("Data from " + str(ano) + " for " + str('RS') + " downloaded and processed! " + str(dataFrame_anual.shape[0]) + " rows")

    dataFrame = pd.concat([dataFrame, dataFrame_anual], axis=0)  # Concatenate DataFrames
    ano += 1

# Remove missing values and duplicates
dataFrame.drop_duplicates()

print(dataFrame.info())

# Mantendo apenas colunas desejadas
columns = ['DTOBITO', 'CODMUNNATU', 'IDADE', 'SEXO', 'ASSISTMED', 'EXAME', 'CIRURGIA']
dataFrame = dataFrame.drop(columns=list(set(dataFrame.columns) - set(columns)))
print(dataFrame.info())

# Transformando os dados
dataFrame['IDADE'] = dataFrame['IDADE'].str.strip().astype(int) - 400
dataFrame['IDADE'] = dataFrame['IDADE'].where(dataFrame['IDADE'] >= 0, 0)
dataFrame['DTOBITO'] = pd.to_datetime(dataFrame['DTOBITO'], format='%d%m%Y')
dataFrame

# Conversão e donwload
dataFrame.to_csv('SIM_dataframe.csv')

'''
from google.colab import drive
drive.mount('/content/drive')

import shutil

# Define the file path in Colab
colab_file_path = './sim_data_cleaned_2021.csv'  # Replace with your file's actual path

# Define the destination file path in Google Drive
drive_file_path = '/content/drive/My Drive/sim_data_cleaned_2021.csv'

# Use shutil to copy the file to Google Drive
shutil.copy2(colab_file_path, drive_file_path)

# Print a message to confirm the upload
print(f"File uploaded to Google Drive: {drive_file_path}")
'''

"""pysus SIA data"""