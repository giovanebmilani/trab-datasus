# -*- coding: utf-8 -*-
"""pysus_sia_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QeM86MO-eUFHVXPaa5cWQEY9wEt3wb5A
"""

from pysus.online_data.SIA import download, show_datatypes
import pandas as pd
import numpy as np

dataFrame = pd.DataFrame()

ano = 2010
while ano <= 2021:
  mes = 1
  while mes <= 12:
    pa_rs = download('RS', ano, mes, group='PA')
    df_mensal = pd.read_parquet(pa_rs)

    # Limit data to 500 rows per month
    if df_mensal.shape[0] > 500:
        df_mensal = df_mensal.sample(500, random_state=np.random.randint(1, 10000))

    # Add a column named "ANO" and include the year
    df_mensal['ANO'] = ano
    dataFrame = pd.concat([dataFrame, df_mensal], axis=0)  # Concatenate DataFrames

    mes = mes + 1

  print("banco de " + str(ano) + " de " + str('RS') + " baixado e tratado! " + str(dataFrame.shape[0]) + " rows")
  ano = ano + 1


# Remove valores faltantes e duplicados
dataFrame.drop_duplicates()

print(dataFrame.info())

# Mantém apenas colunas que for usar
columns = ['PA_UFMUN','PA_REGCT','PA_IDADE','PA_SEXO','PA_QTDPRO','PA_QTDAPR','PA_VALPRO','PA_VALAPR']
dataFrame = dataFrame.drop(columns=list(set(dataFrame.columns) - set(columns)))

print(dataFrame.info())

# Tratamento dados para float e inteiro
dataFrame['PA_VALPRO'] = dataFrame['PA_VALPRO'].str.strip().astype(float)
dataFrame['PA_VALAPR'] = dataFrame['PA_VALAPR'].str.strip().astype(float)
dataFrame['PA_QTDAPR'] = dataFrame['PA_QTDAPR'].str.strip().astype(int)
dataFrame['PA_QTDPRO'] = dataFrame['PA_QTDPRO'].str.strip().astype(int)
dataFrame['PA_IDADE'] = dataFrame['PA_IDADE'].str.strip().astype(int)
dataFrame

# Alterando nome das colunas
df.rename(
    PA_VALPRO={
        'PA_UFMUN': 'codigo_municipio_unidade_saude',
        'PA_REGCT': 'regiao_unidade_saude',
        'PA_IDADE': 'idade_paciente',
        'PA_SEXO': 'sexo_paciente',
        'PA_QTDPRO': 'qtd_procedimentos_realizados',
        'PA_QTDAPR': 'qtd_procedimentos_aprovados',
        'PA_VALPRO': 'valor_total_procedimentos_realizados',
        'PA_VALAPR': 'valor_total_procedimentos_aprovados'
    },
    inplace=True
)

# Conversão e donwload
dataFrame.to_csv('SIA_dataframe.csv')